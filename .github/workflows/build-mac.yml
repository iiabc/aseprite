name: Build Aseprite macOS ARM64

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install build dependencies via Homebrew
        run: |
          brew update
          # 基础编译工具
          brew install cmake ninja python pkg-config
          # 常见图像/文本依赖
          brew install jpeg-turbo libpng libwebp freetype harfbuzz bzip2

      - name: Download Skia binary for ARM64
        run: |
          SKIA_VER="m124-08a5439a6b"
          SKIA_URL="https://github.com/aseprite/skia/releases/download/${SKIA_VER}/Skia-macOS-Release-arm64.zip"
          curl -L -o skia.zip "$SKIA_URL"
          unzip skia.zip -d skia

      - name: Configure CMake
        run: |
          mkdir build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=${{ github.workspace }}/skia \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -G Ninja

      - name: Build Aseprite
        run: ninja -C build aseprite

      - name: Package .app bundle
        run: |
          cd build
          mv bin/Aseprite.app Aseprite.app
          zip -r aseprite-mac-arm64.zip Aseprite.app

      - name: Create GitHub Release (draft)
        id: create_release
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.run_number }}-mac-arm64
          release_name: "Aseprite macOS ARM64 Build ${{ github.run_number }}"
          draft: true

      - name: Upload asset to Release
        uses: actions/upload-release-asset@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/aseprite-mac-arm64.zip
          asset_name: aseprite-mac-arm64.zip
          asset_content_type: application/zip
